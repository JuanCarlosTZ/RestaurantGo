@model RestaurantGo.Models.Restaurante

@{
    ViewBag.Title = "Create";
}

<h2>Crear</h2>

@using (Html.BeginForm("Create","Restaurantes", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "crear" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal" >
        <h4>Restaurante</h4>
        <hr />

        <input id="pac-input" class="controls" type="text"
               placeholder="Enter a location">
        <div id="map" class="form-group"></div>
        <div id="infowindow-content">
            <span id="place-name2" class="title"></span><br>
            Place ID <span id="place-id"></span><br>
            <span id="place-address"></span>
        </div>



        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @id = "nombre" , @class = "form-control", @readonly = "readonly", @style = "background: #DCDCDC" } })
                @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DIRECCION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DIRECCION, new { htmlAttributes = new { @id = "direccion" ,@class = "form-control", @readonly = "readonly", @style = "background: #DCDCDC" } })
                @Html.ValidationMessageFor(model => model.DIRECCION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UBICACION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UBICACION, new { htmlAttributes = new { @id = "ubicacion", @class = "form-control", @readonly = "readonly", @style = "background: #DCDCDC" } })
                @Html.ValidationMessageFor(model => model.UBICACION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ID_UBICACION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID_UBICACION, new { htmlAttributes = new { @id = "id_ubicacion", @class = "form-control", @readonly = "readonly", @style = "background: #DCDCDC" } })
                @Html.ValidationMessageFor(model => model.ID_UBICACION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PRECIO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PRECIO, new { htmlAttributes = new { @id = "precio", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PRECIO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
    

}

<div>
    @Html.ActionLink("Volver al Listado", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
prueba;

}

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBXhI09ZYTiaxmpuxNCgmp7BKABpOpuND4&libraries=places&callback=initMap"
        async defer> </script>
